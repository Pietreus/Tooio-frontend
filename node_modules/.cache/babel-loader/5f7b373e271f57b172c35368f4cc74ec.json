{"remainingRequest":"/home/pietreus/euvsvirus/Tooio/client/node_modules/babel-loader/lib/index.js!/home/pietreus/euvsvirus/Tooio/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/pietreus/euvsvirus/Tooio/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pietreus/euvsvirus/Tooio/client/src/components/OutgoingVideo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pietreus/euvsvirus/Tooio/client/src/components/OutgoingVideo.vue","mtime":1587889512998},{"path":"/home/pietreus/euvsvirus/Tooio/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pietreus/euvsvirus/Tooio/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/pietreus/euvsvirus/Tooio/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pietreus/euvsvirus/Tooio/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["OutgoingVideo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"hello\">\n    <div class=\"videos\">\n      <div id=\"users-container\">\n              <video id=\"videoContainer\" ref=\"videoContainer\" class=\"video-small\"></video>\n\n      </div>\n      <div id=\"users\"></div>\n    </div>\n    {{roomName}}\n  </div>\n</template>\n\n<script>\nimport io from \"socket.io-client\";\nvar sessionDescription =\n  window.RTCSessionDescription ||\n  window.mozRTCSessionDescription ||\n  window.webkitRTCSessionDescription ||\n  window.msRTCSessionDescription;\nexport default {\n  name: \"OutgoingVideos\",\n  props: {\n    roomName: String\n  },\n\n  data: () => ({\n    existingStreams: [],\n    socket: {},\n    localStream: null,\n    pc: {},\n    answersFrom: {},\n    activeVideos: [],\n    iceConfiguration: {\n      iceServers: [\n        {\n          urls: [\"stun:stun.schlund.de\"]\n        }\n      ]\n    }\n  }),\n  methods: {\n    setupLocalStream: async function() {\n      const videoContainer = this.$refs.videoContainer;\n      videoContainer.srcObject = this.localStream;\n      videoContainer.onloadedmetadata = function() {\n        videoContainer.play();\n      };\n    },\n    setupSockets: async function() {\n      this.socket.on(\"add-users\", this.onAddUsers);\n      this.socket.on(\"offer-made\", this.onOfferMade);\n      this.socket.on(\"answer-made\", this.onAnswerMade);\n    },\n    errorHandler: function(err) {\n      console.warn(\"Error\", err);\n    },\n    createOffer: function(id) {\n      this.pc[id].createOffer(offer => {\n        this.pc[id].setLocalDescription(\n          new sessionDescription(offer),\n          () => {\n            this.socket.emit(\"make-offer\", {\n              offer: offer,\n              to: id\n            });\n          },\n          this.errorHandler\n        );\n      }, this.errorHandler);\n    },\n    onAddUsers: function(data) {\n      console.log(\"addusers\", data);\n      for (var i = 0; i < data.users.length; i++) {\n        var el = document.createElement(\"div\"),\n          id = data.users[i];\n\n        el.setAttribute(\"id\", id);\n        el.innerHTML = id;\n        el.addEventListener(\"click\", () => {\n          this.addPeerConnection(id);\n          this.createOffer(id);\n        });\n        document.getElementById(\"users\").appendChild(el);\n      }\n    },\n    onAnswerMade: function(data) {\n      console.log(\"answermade\", data);\n\n      this.pc[data.socket].setRemoteDescription(\n        new sessionDescription(data.answer),\n        () => {\n          document.getElementById(data.socket).setAttribute(\"class\", \"active\");\n          if (!this.answersFrom[data.socket]) {\n            this.createOffer(data.socket);\n            this.answersFrom[data.socket] = true;\n          }\n        },\n        this.errorHandler\n      );\n    },\n    onOfferMade: function(data) {\n      console.log(\"offermade\", data);\n      this.addPeerConnection(data.socket);\n      this.pc[data.socket].setRemoteDescription(\n        new sessionDescription(data.offer),\n        () => {\n          this.pc[data.socket].createAnswer(answer => {\n            this.pc[data.socket].setLocalDescription(\n              new sessionDescription(answer),\n              () => {\n                this.socket.emit(\"make-answer\", {\n                  answer: answer,\n                  to: data.socket\n                });\n              },\n              this.errorHandler\n            );\n          }, this.errorHandler);\n        },\n        this.errorHandler\n      );\n    },\n    addPeerConnection: function(id) {\n      var peerConnection =\n        window.RTCPeerConnection ||\n        window.mozRTCPeerConnection ||\n        window.webkitRTCPeerConnection ||\n        window.msRTCPeerConnection;\n      const newConnection = new peerConnection(this.iceConfiguration);\n      newConnection.ontrack = obj => {\n        if (!this.existingStreams.includes(obj.streams[0])) {\n          this.existingStreams.push(obj.streams[0])\n          const vid = document.createElement(\"video\");\n          vid.setAttribute(\"class\", \"video-small\");\n          vid.setAttribute(\"autoplay\", \"autoplay\");\n          vid.setAttribute(\"style\", \"width: 300px;\")\n          document.getElementById(\"users-container\").appendChild(vid);\n          vid.srcObject = obj.streams[0];\n        }\n      };\n      newConnection.addStream(this.localStream);\n      this.pc[id] = newConnection;\n    }\n  },\n  mounted: async function() {\n    this.socket = io.connect(\"http://localhost:5000\");\n\n    navigator.getUserMedia =\n      navigator.getUserMedia ||\n      navigator.webkitGetUserMedia ||\n      navigator.mozGetUserMedia ||\n      navigator.msGetUserMedia;\n    console.log(navigator);\n    this.localStream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    });\n\n    await this.setupLocalStream();\n    this.addPeerConnection(this.socket.id);\n    await this.setupSockets();\n\n    this.socket.emit(\"join-table\", {\n      name: this.roomName\n    });\n  },\n  watch: {\n    // whenever question changes, this function will run\n    roomName: function(newName, oldName) {\n      this.socket.emit(\"leave-table\", {\n        name: oldName\n      });\n      this.pc = {};\n      this.answersFrom = [];\n      this.socket.emit(\"join-table\", {\n        name: newName\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n#users-container {\n  display: flex;\n  overflow: auto;\n  max-width: 30vw;\n}\n.videos {\n  display: flex;\n  overflow: auto;\n}\n#users{\n    max-width: 15vw;\n}\n.video-small{\n  width: 300px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}